AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ReactApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: "Node.js application for React front-end"
  
  ReactConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref ReactApplication
      Description: "Configuration template for Node.js application"
      SolutionStackName: "64bit Amazon Linux 2023 v6.1.8 running Node.js 20"
      OptionSettings:
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '2'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '6'
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref MyInstanceProfile

  ReactEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref ReactApplication
      Description: "Environment for Node.js React app"
      TemplateName: !Ref ReactConfigurationTemplate

  MyInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Beanstalk EC2 role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MyInstanceRole

Outputs:
  EnvironmentUrl:
    Description: URL of the Elastic Beanstalk environment
    Value: !GetAtt ReactEnvironment.EndpointURL
