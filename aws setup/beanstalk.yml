AWSTemplateFormatVersion: '2010-09-09'
Resources:
  BeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: "Node.js application for React front-end"

  BeanstalkApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref BeanstalkApplication
      Description: "Initial version"
      SourceBundle:
        S3Bucket: "resume-puru"
        S3Key: "portfolio/portfolio (2).zip"

  BeanstalkConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref BeanstalkApplication
      Description: "Configuration template for Node.js application"
      SolutionStackName: "64bit Amazon Linux 2023 v6.1.8 running Node.js 20"
      OptionSettings:
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '1'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '3'
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: SingleInstance
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref MyInstanceProfile

  BeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref BeanstalkApplication
      EnvironmentName: !Sub "NodejsEnvironment-${AWS::StackName}" # Ensure unique environment name
      Description: "Environment for Node.js React app"
      TemplateName: !Ref BeanstalkConfigurationTemplate
      VersionLabel: !Ref BeanstalkApplicationVersion

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: "LabRoleProfile"
      Roles:
        - "LabRole"  # Reference the existing role by name

Outputs:
  EnvironmentUrl:
    Description: URL of the Elastic Beanstalk environment
    Value: !GetAtt BeanstalkEnvironment.EndpointURL
